ðŸ§± Chapter 1: Environment Setup Like a Pro
ðŸ”¹ 1. Create a Virtual Environment
This isolates dependencies so your project doesnâ€™t conflict with others.
# Create a virtual environment
python -m venv env

# Activate it (Windows)
env\Scripts\activate

# Activate it (Linux/macOS)
source env/bin/activate


âœ… Tip: Always activate your environment before installing packages or running code.


ðŸ”¹ 2. Install Essential Developer Tools
pip install black isort flake8 pre-commit


These tools help enforce code quality and formatting:
- black: auto-formats your code
- isort: organizes imports
- flake8: checks for syntax and style issues
- pre-commit: runs checks before every commit

ðŸ”¹ 3. Set Up pre-commit Hooks
Create a .pre-commit-config.yaml file:
repos:
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8


Then run:
pre-commit install


âœ… Now every time you commit, these checks will run automatically.


ðŸ”¹ 4. Create a requirements.txt
pip freeze > requirements.txt


This file lists all dependenciesâ€”critical for deployment and collaboration.

ðŸ”¹ 5. Initialize Git & Push to GitHub
git init
git add .
git commit -m "Initial commit"


Then create a GitHub repo and push your code:
git remote add origin https://github.com/your-username/your-repo.git
git push -u origin main



ðŸ”¹ 6. Optional: VS Code Setup
- Install extensions: Python, Pylance, GitLens
- Configure settings.json:
{
  "python.formatting.provider": "black",
  "editor.formatOnSave": true,
  "python.linting.flake8Enabled": true,
  "python.linting.enabled": true
}



âœ… Your Task
Create a folder called python-dev-practice, set up the environment, install tools, and push it to GitHub. Iâ€™ll help you polish the README and structure next.
Ready to move to Chapter 2: Project Structure & Modular Design once youâ€™ve done this. Want me to walk you through a sample repo structure next?



